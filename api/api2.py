import sys
import os
# Add project root (parent of api/) to module search path
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from fastapi import FastAPI, Header, HTTPException
from pydantic import BaseModel
from typing import Optional
import uuid

from api.getset import (
    set_current_session_id, get_current_session_id,
    set_current_access_token, get_current_access_token,
    set_current_user_input, set_current_ocr_result
)

# Import your existing execution function (adjust import path as necessary)
from test.test_flow import test_interactive_calendar_flow

app = FastAPI()

class InitRequest(BaseModel):
    user_id: str
    access_token: str
    session_id: Optional[str] = None  # will be generated by server
    user_input: str
    ocr_result: Optional[str] = None

class MessageRequest(BaseModel):
    user_id: str
    access_token: Optional[str] = None
    session_id: str
    user_input: str
    ocr_result: Optional[str] = None

class AgentResponse(BaseModel):
    session_id: str
    response: str

@app.post("/v1/chat/init", response_model=AgentResponse)
def start_session(req: InitRequest):
    set_current_access_token(req.access_token)
    session_id = str(uuid.uuid4())
    set_current_session_id(session_id)
    set_current_user_input(req.user_input)
    set_current_ocr_result(req.ocr_result)
    # Call your model execution function
    response_text = test_interactive_calendar_flow()
    return AgentResponse(session_id=session_id, response=response_text)

@app.post("/v1/chat/message", response_model=AgentResponse)
def session_messages(req: MessageRequest):
    if get_current_session_id() != req.session_id:
        raise HTTPException(status_code=401, detail="Invalid session_id")
    if req.access_token and req.access_token != get_current_access_token():
        raise HTTPException(status_code=401, detail="Invalid access_token")
    set_current_user_input(req.user_input)
    set_current_ocr_result(req.ocr_result)
    # Call your model execution function with existing session
    response_text = test_interactive_calendar_flow()
    return AgentResponse(session_id=req.session_id, response=response_text)